# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Push to DockerHub using BuildKit
        run: |
          docker buildx build --push --tag "${{ secrets.DOCKERHUB_USERNAME }}/portfolio:latest" .

      - name: Create ssh key
      run: |
        mkdir -p ~/.ssh/
        echo "$SSH_PRIVATE_KEY" > ../private.key
          sudo chmod 600 ../private.key
          echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
        env:
          SSH_PRIVATE_KEY: ${{secrets.RSAKEY_LAPTOP}}
          SSH_KNOWN_HOSTS: ${{secrets.SSH_KNOWN_HOSTS}}
          SSH_KEY_PATH: ${{ github.workspace }}/../private.key

      - name: Deploy container
        run: |
          ssh -o StrictHostKeyChecking=no -i $SSH_KEY_PATH henry@5.71.225.54 "docker pull henrybrooks/portfolio:latest && docker run -p 4200:80 henrybrooks/portfolio && docker system prune --force"
        env:
          SSH_KEY_PATH: ${{ github.workspace }}/../private.key
          
      
      